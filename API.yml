openapi: "3.0.2"
info:
  title: Service station API
  version: "1.0"
servers:
  - url: https://server.service-station.com

tags:
  - name: appointment
    description: Appointment operations

  - name: filial
    description: Filial operations

  - name: shedule
    description: Operations with shedule

  - name: master
    description: Master operations

  - name: review
    description: Review operations

  - name: special-offer
    description: Operations with bonuses and special offers

paths:
  /appointments/{userID}:
    get:
      tags:
        - appointment
      summary: Get all appointments for user
      operationId: getAppointments
      parameters:
        - id: userID
          in: path
          description: ID of user
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Appointment"
        "400":
          description: Invalid ID supplied
        "404":
          description: User not found

    post:
      tags:
        - appointment
      summary: Create appointment
      operationId: createAppointment
      parameters:
        - id: userID
          in: path
          description: ID of user
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Created appointment object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Appointment"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Appointment"
        "400":
          description: Invalid input

    put:
      tags:
        - appointment
      summary: Update appointment
      operationId: updateAppointment
      parameters:
        - id: userID
          in: path
          description: ID of user
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Updated appointment object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Appointment"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Appointment"
        "400":
          description: Invalid input

    delete:
      tags:
        - appointment
      summary: Delete appointment
      operationId: deleteAppointment
      parameters:
        - id: userID
          in: path
          description: ID of user
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Appointment"
        "400":
          description: Invalid ID supplied
        "404":
          description: Appointment not found

  /appointments/today:
    get:
      tags:
        - appointment
      summary: Get all appointments registered today
      operationId: getTodayAppointments
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Appointment"
        "400":
          description: Invalid ID supplied
        "404":
          description: User not found

  /appointments/{appointmentID}:
    get:
      tags:
        - appointment
      summary: Get appointment by ID
      operationId: getAppointmentByID
      parameters:
        - id: appointmentID
          in: path
          description: ID of appointment
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Appointment"
        "400":
          description: Invalid ID supplied
        "404":
          description: Appointment not found

  /filials:
    get:
      tags:
        - filial
      summary: Get all filials
      operationId: getFilials
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Filial"
        "404":
          description: Filials not found

  /filials/{filialID}:
    get:
      tags:
        - filial
      summary: Get filial by ID
      operationId: getFilialByID
      parameters:
        - id: filialID
          in: path
          description: ID of filial
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Filial"
        "400":
          description: Invalid ID supplied
        "404":
          description: Filial not found

  /shedule/{month}:
    get:
      tags:
        - shedule
      summary: Get shedule for month
      operationId: getShedule
      parameters:
        - id: month
          in: path
          description: Month
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Shedule"
        "400":
          description: Invalid month supplied
        "404":
          description: Shedule not found

  /masters:
    get:
      tags:
        - master
      summary: Get all masters
      operationId: getMasters
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Master"
        "404":
          description: Masters not found

  /review/{masterID}:
    get:
      tags:
        - review
      summary: Get all reviews for master
      operationId: getReviews
      parameters:
        - id: masterID
          in: path
          description: ID of master
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Review"
        "400":
          description: Invalid ID supplied
        "404":
          description: Master not found

    post:
      tags:
        - review
      summary: Create review
      operationId: createReview
      parameters:
        - id: masterID
          in: path
          description: ID of master
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Created review object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Review"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Review"
        "400":
          description: Invalid input

    put:
      tags:
        - review
      summary: Update review
      operationId: updateReview
      parameters:
        - id: masterID
          in: path
          description: ID of master
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Updated review object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Review"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Review"
        "400":
          description: Invalid input

    delete:
      tags:
        - review
      summary: Delete review
      operationId: deleteReview
      parameters:
        - id: masterID
          in: path
          description: ID of master
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Deleted review object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Review"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Review"
        "400":
          description: Invalid input

  /special-offers/{userID}:
    get:
      tags:
        - special-offer
      summary: Get all special offers for user
      operationId: getSpecialOffers
      parameters:
        - id: userID
          in: path
          description: ID of user
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SpecialOffer"
        "400":
          description: Invalid ID supplied
        "404":
          description: User not found

    post:
      tags:
        - special-offer
      summary: Create special offer
      operationId: createSpecialOffer
      parameters:
        - id: userID
          in: path
          description: ID of user
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Created special offer object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SpecialOffer"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SpecialOffer"
        "400":
          description: Invalid input

    put:
      tags:
        - special-offer
      summary: Update special offer
      operationId: updateSpecialOffer
      parameters:
        - id: userID
          in: path
          description: ID of user
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Updated special offer object
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SpecialOffer"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SpecialOffer"
        "400":
          description: Invalid input

    delete:
      tags:
        - special-offer
      summary: Delete special offer
      operationId: deleteSpecialOffer
      parameters:
        - id: userID
          in: path
          description: ID of user
          required: true
          schema:
            type:

components:
  schemas:
    Appointment:
      type: object
      properties:
        id:
          type: integer
          format: int64
        user_id:
          type: integer
          format: int64
        filial_id:
          type: integer
          format: int64
        master_id:
          type: integer
          format: int64
        create_date:
          type: string
          format: date
        date:
          type: string
          format: date
        time:
          type: string
          format: time
        price:
          type: integer
          format: int64
        status:
          type: string
          enum: [new, in_progress, done, canceled]
        details:
          type: array
          items:
            $ref: "#/components/schemas/Detail"
        manager:
          type: string

    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        surname:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
        phone:
          type: string
          format: phone
        role:
          type: string
          enum: [user, admin]
        bonus_balance:
          type: integer
          format: int64
        appointments:
          type: array
          items:
            $ref: "#/components/schemas/Appointment"
        reviews:
          type: array
          items:
            $ref: "#/components/schemas/Review"
        special_offers:
          type: array
          items:
            $ref: "#/components/schemas/SpecialOffer"

    Detail:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        price:
          type: integer
          format: int64
        count:
          type: integer
          format: int64

    Filial:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        address:
          type: string
        phone:
          type: string
          format: phone

    Master:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        surname:
          type: string
        rating:
          type: integer
          format: int64
        reviews:
          type: array
          items:
            $ref: "#/components/schemas/Review"

    Review:
      type: object
      properties:
        id:
          type: integer
          format: int64
        user_id:
          type: integer
          format: int64
        master_id:
          type: integer
          format: int64
        text:
          type: string
        rating:
          type: integer
          format: int64

    SpecialOffer:
      type: object
      properties:
        id:
          type: integer
          format: int64
        end_date:
          type: string
          format: date
        description:
          type: string

    Shedule:
      type: object
      properties:
        id:
          type: integer
          format: int64
        date:
          type: string
          format: date
        time_start:
          type: string
          format: time
        time_end:
          type: string
          format: time
        break_time_start:
          type: string
          format: time
        break_time_end:
          type: string
          format: time
        masters:
          type: array
          items:
            $ref: "#/components/schemas/Master"
        filial_id:
          type: integer
          format: int64
